@page "/Traces"
@using OTLPView.DataModel;

<PageTitle>Traces</PageTitle>

@if (State is { SelectedSpan: null, SelectedOperation: null })
{
    <SimpleBanner TitleText="No distributed tracing data"
                  BodyText="As distributed traces are written, they will be display here." />
}
else
{
    <MudStack Row="true" Spacing="3" Class="d-flex">
        <MudPaper Elevation="1" Height="800" Class="flex-grow-0">

            <MudTable Items="@TelemetryResults.Operations" Hover="true" Dense="true" @ref="opsTable" RowClassFunc="@SelectedRowClassFunc" OnRowClick="OperationClick" T="TraceOperation">
                <NoRecordsContent>
                    Operations will be shown when traces have been seen.
                </NoRecordsContent>
                <HeaderContent>
                    <MudTh>Operation Id</MudTh>
                    <MudTh>Start Time</MudTh>
                    <MudTh>Duration (ms)</MudTh>             
                    <MudTh>Spans</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Operation Id">@(ShortOpName(context.OperationId))</MudTd>
                    <MudTd DataLabel="Root Spans">@(context.StartTime.ToLocalTime().ToLongTimeString())</MudTd>
                    <MudTd DataLabel="Duration">@(context.Duration)</MudTd>
                   
                    <MudTd DataLabel="Spans">@(context.AllSpans.Count)</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager HideRowsPerPage="true" PageSizeOptions="new int[]{30,}"/>
                </PagerContent>
            </MudTable>

        </MudPaper>
        <MudPaper Width="800" Class="flex-grow-1">
            @if (State.SelectedSpan is not null)
            {
                <MudText Typo="Typo.h6"><span>Operation:</span><span>@State.SelectedOperation.OperationId</span></MudText>
         <MudPaper> 
                @foreach (var s in State.SelectedOperation.RootSpans.Values)
                {
                    <TraceSpanView Span="@s" />
                }
                @foreach (var s in State.SelectedOperation.UnParentedSpans)
                {
                    <TraceSpanView Span="@s" />
                }
                </MudPaper>
            }
            else
            {
                <MudText>Select an operation to view its spans</MudText>
            }
       
        </MudPaper>
        <MudPaper Width="300" Class="flex-grow-0">
            @if (State.SelectedSpan is not null)
            {
                <MudText Typo="Typo.overline">Span Details</MudText>
                <MudText Typo="Typo.h6">@State.SelectedSpan.Name</MudText>
                <table>
                    <tbody>
                        <tr>
                            <td><MudText Typo="Typo.overline">SpanId:</MudText></td>
                            <td><MudText Typo="Typo.body2">@State.SelectedSpan.SpanId</MudText></td>
                        </tr>
                        <tr>
                            <td><MudText Typo="Typo.overline">Kind:</MudText></td>
                            <td><MudText Typo="Typo.body2">@State.SelectedSpan.Kind</MudText></td>
                        </tr>
                        @if (State.SelectedSpan.ParentSpanId is not null)
                        {
                            <tr>
                                <td><MudText Typo="Typo.overline">Parent SpanId:</MudText></td>
                                <td><MudText Typo="Typo.body2">@State.SelectedSpan.ParentSpanId</MudText></td>
                            </tr>
                        }
                        @if (State.SelectedSpan.NotParented)
                        {
                            <tr>
                                <td><MudText Typo="Typo.overline">Validation Error</MudText></td>
                                <td><MudText Typo="Typo.body2">Parent span not found</MudText></td>
                            </tr>
                        }
                        <tr>
                            <td><MudText Typo="Typo.overline">Operation Offset:</MudText></td>
                            <td><MudText Typo="Typo.body2">@((State.SelectedSpan.StartTime - State.SelectedSpan.Operation.StartTime).TotalMilliseconds) ms</MudText></td>
                        </tr>
                        @if (State.SelectedSpan.ParentSpan is not null)
                        {
                            <tr>
                                <td><MudText Typo="Typo.overline">Parent Offset</MudText></td>

                                <td><MudText Typo="Typo.body2">@((State.SelectedSpan.StartTime - State.SelectedSpan.ParentSpan.StartTime).TotalMilliseconds) ms </MudText></td>
                            </tr>
                        }
                        <tr>
                            <td><MudText Typo="Typo.overline">Duration:</MudText></td>
                            <td><MudText Typo="Typo.body2">@(State.SelectedSpan.Duration.TotalMilliseconds) ms</MudText></td>
                        </tr>
                        @if (State.SelectedSpan.Status is not null)
                        {
                            <tr>
                                <td><MudText Typo="Typo.overline">Status:</MudText></td>
                                <td><MudText Typo="Typo.body2">@State.SelectedSpan.Status</MudText></td>
                            </tr>
                        }
                        @foreach (var kv in State.SelectedSpan.Attributes)
                        {
                            if (!string.IsNullOrEmpty(kv.Value))
                            {
                                <tr>
                                    <td><MudText Typo="Typo.overline">@kv.Key:</MudText></td>
                                    <td><MudText Typo="Typo.body2">@kv.Value</MudText></td>
                                </tr>
                            }
                        }
                        <tr>
                            <td colspan="2"><MudText Typo="Typo.subtitle1">Trace Scope</MudText></td>
                        </tr>
                        <tr>
                            <td><MudText Typo="Typo.overline">Name:</MudText></td>
                            <td><MudText Typo="Typo.body2">@State.SelectedSpan.TraceScope.ScopeName</MudText></td>
                        </tr>
                        @if (!string.IsNullOrEmpty(State.SelectedSpan.TraceScope.Version))
                        {
                            <tr>
                                <td><MudText Typo="Typo.overline">Version:</MudText></td>
                                <td><MudText Typo="Typo.body2">@State.SelectedSpan.TraceScope.Version</MudText></td>
                            </tr>
                        }
                        @foreach (var kv in State.SelectedSpan.TraceScope.Properties)
                        {
                            if (!string.IsNullOrEmpty(kv.Value))
                            {
                                <tr>
                                    <td><MudText Typo="Typo.overline">@kv.Key:</MudText></td>
                                    <td><MudText Typo="Typo.body2">@kv.Value</MudText></td>
                                </tr>
                            }
                        }
                        <tr>
                            <td colspan="2"><MudText Typo="Typo.subtitle1">Events</MudText></td>
                        </tr>
                        @if (State.SelectedSpan.Events.Count > 0)
                        {
                            foreach (var e in State.SelectedSpan.Events)
                            {
                                <tr>
                                    <td><MudText Typo="Typo.overline">Name:</MudText></td>
                                    <td><MudText Typo="Typo.body2">@e.Name</MudText></td>
                                </tr>
                                <tr>
                                    <td><MudText Typo="Typo.overline">Offset</MudText></td>
                                    <td><MudText Typo="Typo.body2">@e.TimeOffset(State.SelectedSpan)</MudText></td>
                                </tr>
                                foreach (var kv in e.Attributes)
                                {
                                    if (!string.IsNullOrEmpty(kv.Value))
                                    {
                                        <tr>
                                            <td><MudText Typo="Typo.overline">@kv.Key:</MudText></td>
                                            <td><MudText Typo="Typo.body2">@kv.Value</MudText></td>
                                        </tr>
                                    }
                                }
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="2"><MudText>No events</MudText></td>
                            </tr>
                        }
                        <tr>
                            <td colspan="2"><MudText Typo="Typo.subtitle1">Application</MudText></td>
                        </tr>
                        <tr>
                            <td><MudText Typo="Typo.overline">Name:</MudText></td>
                            <td><MudText Typo="Typo.body2">@State.SelectedSpan.Source.ApplicationName</MudText></td>
                        </tr>

                        @foreach (var kv in State.SelectedSpan.Source.Properties)
                        {
                            if (!string.IsNullOrEmpty(kv.Value))
                            {
                                <tr>
                                    <td><MudText Typo="Typo.overline">@kv.Key:</MudText></td>
                                    <td><MudText Typo="Typo.body2">@kv.Value</MudText></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div>Select a span to see details</div>
            }
        </MudPaper>
    </MudStack>

}
