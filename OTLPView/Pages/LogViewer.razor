@page "/"

<PageTitle>Logs</PageTitle>

@if (_logEntries is null or { Count: 0 })
{
    <SimpleBanner TitleText="No logs found"
                  BodyText="As logs are written, they will be displayed here." />
}
else
{
    <MudTable Items="@_logEntries" Dense="true" Hover="true" Virtualize="true"
              Filter="new Func<OtlpLogEntry, bool>(OnApplyTextFilter)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Log Entries</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_textFilter" Clearable="true" Placeholder="Search"
                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                          IconSize="Size.Medium" Class="mt-0"></MudTextField>
            <MudStack Row="true">
                @if (_logFilters.Count == 0)
                {
                    <span>No Filters</span>
                }
                else
                {
                    foreach (var filter in _logFilters)
                    {
                        <MudChip Variant="Variant.Outlined" OnClick="() => OpenFilter(filter)">@filter.FilterText</MudChip>
                    }
                }
                <MudIconButton Icon="@Icons.Material.Filled.AddTask" aria-label="Add Filter" OnClick="()=>OpenFilter(null)" />
            </MudStack>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.Application.ShortApplicationName)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.Severity)">Severity</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.TimeStamp)">Timestamp</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.OriginalFormat)">Format</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.SpanId)">Span</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.TraceId)">Trace Id</MudTableSortLabel></MudTh>
            <MudTh>Properties</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Application.ShortApplicationName.HtmlEncode()</MudTd>
            <MudTd DataLabel="Severity">@context.Severity</MudTd>
            <MudTd DataLabel="Timestamp">@context.TimeStamp.ToLocalTime()</MudTd>
            <MudTd DataLabel="Format">@context.OriginalFormat</MudTd>
            <MudTd DataLabel="Span">@context.SpanId</MudTd>
            <MudTd DataLabel="Trace Id">
                <MudMenu ActivationEvent="@MouseEvent.RightClick">
                    <ActivatorContent>
                        <MudText>@context.TraceId</MudText>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem OnClick='(()=>AddFilter("TraceId",FilterCondition.Equals,context.TraceId ))'>Add Filter "TraceId == @context.TraceId"</MudMenuItem>
                    </ChildContent>
                </MudMenu>
            </MudTd>
            <MudTd DataLabel="Properties">
                @if (HasLogData)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Preview"
                                   Color="Color.Primary" Size="Size.Large"
                                   OnClick="(async () => await OnShowProperties(context))">
                    </MudIconButton>
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.DoNotDisturb"
                             Color="Color.Error" Size="Size.Large">
                    </MudIcon>
                }
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}
