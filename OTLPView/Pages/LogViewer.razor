@page "/"
@using Microsoft.Fast.Components.FluentUI

<PageTitle>Logs</PageTitle>

@if (!HasLogData)
{
    <SimpleBanner TitleText="No logs found"
                  BodyText="As logs are written, they will be displayed here." />
}
else
{
    <FluentStack HorizontalAlignment="HorizontalAlignment.Right" VerticalAlignment="VerticalAlignment.Center">
        <FluentLabel>Filters: </FluentLabel>
        @if (_logFilters.Count == 0)
        {
            <span>No Filters</span>
        }
        else
        {
            foreach (var filter in _logFilters)
            {
                <FluentButton Appearance="Appearance.Outline" OnClick="() => OpenFilter(filter)">@filter.FilterText</FluentButton>
            }
        }
        <FluentButton Appearance="Appearance.Stealth" aria-label="Add Filter" OnClick="()=>OpenFilter(null)"><FluentIcon Value="@(new Icons.Regular.Size16.Filter())" /></FluentButton>
    </FluentStack>
    <FluentDataGrid Items="@(_logEntries)" ResizableColumns=true Pagination="@pagination" GridTemplateColumns="0.1fr 0.1fr 0.1fr 1fr 0.2fr 0.3fr 0.03fr">
        <PropertyColumn Title="Application" Property="@(context =>context.Application.ShortApplicationName.HtmlEncode())" />
        <PropertyColumn Title="Severity" Property="@(context =>context.Severity)" />
        <PropertyColumn Title="Timestamp" Property="@(context =>context.TimeStamp.ToLocalTime().ToLongTimeString())" />
        <PropertyColumn Title="Format" Property="@(context =>context.OriginalFormat)" />
        <PropertyColumn Title="Span" Property="@(context =>context.SpanId)" />
        <PropertyColumn Title="Trace Id" Property="@(context =>context.TraceId)" />
        <TemplateColumn>
            <FluentButton Appearance="Appearance.Stealth" aria-label="Details" OnClick="()=>OnShowProperties(context)"><FluentIcon Value="@(new Icons.Regular.Size20.AppsListDetail())" /></FluentButton>
        </TemplateColumn>
    </FluentDataGrid>
    <FluentPaginator State="@pagination" />
}

@* <ToolBarContent>
            <MudText Typo="Typo.h6">Log Entries</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_textFilter" Clearable="true" Placeholder="Search"
                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                          IconSize="Size.Medium" Class="mt-0"></MudTextField>
            <MudStack Row="true">
                @if (_logFilters.Count == 0)
                {
                    <span>No Filters</span>
                }
                else
                {
                    foreach (var filter in _logFilters)
                    {
                        <MudChip Variant="Variant.Outlined" OnClick="() => OpenFilter(filter)">@filter.FilterText</MudChip>
                    }
                }
                <MudIconButton Icon="@Icons.Material.Filled.AddTask" aria-label="Add Filter" OnClick="()=>OpenFilter(null)" />
            </MudStack>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.Application.ShortApplicationName)">Name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.Severity)">Severity</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.TimeStamp)">Timestamp</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.OriginalFormat)">Format</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.SpanId)">Span</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<OtlpLogEntry, object>(x => x.TraceId)">Trace Id</MudTableSortLabel></MudTh>
            <MudTh>Properties</MudTh>
    </HeaderContent>*@

@*
                    <MudMenu ActivationEvent="@MouseEvent.RightClick">
        <ActivatorContent>
            <MudText>@context.TraceId</MudText>
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem OnClick='(()=>AddFilter("TraceId",FilterCondition.Equals,context.TraceId ))'>Add Filter "TraceId == @context.TraceId"</MudMenuItem>
        </ChildContent>
    </MudMenu>
</MudTd>
<MudTd DataLabel="Properties">
    @if (HasLogData)
    {
        <MudIconButton Icon="@Icons.Material.Filled.Preview"
                       Color="MudBlazor.Color.Primary" Size="Size.Large"
                       OnClick="(async () => await OnShowProperties(context))">
        </MudIconButton>
    }
    else
    {
        <MudIcon Icon="@Icons.Material.Filled.DoNotDisturb"
                 Color="Color.Error" Size="Size.Large">
        </MudIcon>
    }
</MudTd>
            *@
